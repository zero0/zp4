db.drop_tables = \
	DROP TABLE arc_file; \
	DROP TABLE arc_reference;
db.create_table_file = \
	CREATE TABLE IF NOT EXISTS arc_file ( \
		id INT NOT NULL IDENTITY, \
		path VARCHAR(255) NOT NULL, \
		hash INT NOT NULL, \
		changed_on TIMESTAMP NOT NULL \
	);
db.create_table_ref = \
	CREATE TABLE IF NOT EXISTS arc_reference ( \
		id INT NOT NULL IDENTITY, \
		src_file INT NOT NULL, \
		ref_file INT NOT NULL, \
		created_on TIMESTAMP NOT NULL \
	);
db.clear_table_file = \
	TRUNCATE TABLE arc_file;
db.clear_table_ref = \
	TRUNCATE TABLE arc_reference;
db.merge_file = \
	MERGE INTO arc_file AS af \
		USING ( SELECT * FROM arc_file WHERE path = ? ) AS iaf \
		ON af.id = iaf.id \
		WHEN MATCHED THEN UPDATE SET af.hash = ?, af.changed_on = NOW() \
		WHEN NOT MATCHED THEN INSERT ( path, hash, changed_on ) VALUES ( ?, ?, NOW() );
db.add_file = \
	INSERT INTO arc_file ( path, hash, changed_on ) VALUES ( ?, ?, NOW() );
db.link_files = \
	INSERT INTO arc_reference ( \
		src_file, \
		ref_file \
	) VALUES ( \
		( SELECT id FROM arc_file WHERE path = ? ), \
		( SELECT id FROM arc_file WHERE path = ? ) \
	);
db.list_files = \
	SELECT * FROM arc_file;
db.get_files = \
	SELECT path FROM arc_file;
db.get_referenced_from = \
	SELECT path FROM arc_file WHERE id IN ( \
		SELECT ref_file FROM arc_reference AS rf \
		WHERE src_file = ( SELECT id FROM arc_file WHERE path = ? ) \
	);
db.get_referenced_from_all = \
	SELECT path FROM arc_file WHERE id IN ( \
		SELECT ref_file FROM arc_reference AS rf \
		WHERE src_file = ( SELECT id FROM arc_file WHERE path = ? ) \
		UNION \
		SELECT ref_file FROM arc_reference WHERE src_file = rf.ref_file \
	);
